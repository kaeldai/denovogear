INCLUDE(CheckIncludeFile)
INCLUDE(CheckFunctionExists)
INCLUDE(CheckLibraryExists)

################################################################################
# Always make a full statement RPATH
# See http://www.itk.org/Wiki/CMake_RPATH_handling

SET(CMAKE_SKIP_BUILD_RPATH FALSE)
SET(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)
SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/${LIB_INSTALL_DIR}")
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
LIST(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES "${CMAKE_INSTALL_PREFIX}/${LIB_INSTALL_DIR}" is_system_dir)
IF("${is_system_dir}" STREQUAL "-1")
  SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/${LIB_INSTALL_DIR}")
ENDIF("${is_system_dir}" STREQUAL "-1")
################################################################################

#ADD_SUBDIRECTORY(contrib/newmat)
#ADD_SUBDIRECTORY(utils)

#INCLUDE_DIRECTORIES(BEFORE
#	"${CMAKE_CURRENT_SOURCE_DIR}/utils"
#	"${CMAKE_CURRENT_SOURCE_DIR}/contrib/newmat"
#)

INCLUDE_DIRECTORIES(BEFORE "${CMAKE_CURRENT_BINARY_DIR}")
INCLUDE_DIRECTORIES(BEFORE "${CMAKE_CURRENT_SOURCE_DIR}/include")

ADD_EXECUTABLE(dng-dnm
  dng-dnm.cc
  snpLike.cc indelLike.cc pairLike.cc
  makeLookup.cc
  pedParser.cc
  bcf2Qcall.cc bcf2Paired.cc
)
SET_PROPERTY(TARGET dng-dnm PROPERTY CXX_STANDARD 11)
SET_PROPERTY(TARGET dng-dnm PROPERTY CXX_STANDARD_REQUIRED ON)


ADD_EXECUTABLE(dng-phaser
  dng-phaser.cc
#  snpLike.cc indelLike.cc pairLike.cc
#  makeLookup.cc
#  pedParser.cc
#  bcf2Qcall.cc bcf2Paired.cc
)
SET_PROPERTY(TARGET dng-phaser PROPERTY CXX_STANDARD 11)
SET_PROPERTY(TARGET dng-phaser PROPERTY CXX_STANDARD_REQUIRED ON)


ADD_EXECUTABLE(dng-call
  dng-call.cc
  lib/call.cc lib/likelihood.cc lib/newick.cc lib/pedigree.cc lib/peeling.cc
  lib/mutation.cc lib/stats.cc
)
SET_PROPERTY(TARGET dng-call PROPERTY CXX_STANDARD 11)
SET_PROPERTY(TARGET dng-call PROPERTY CXX_STANDARD_REQUIRED ON)

CONFIGURE_FILE(
  "${CMAKE_CURRENT_SOURCE_DIR}/dng.sh.in"
  "${CMAKE_CURRENT_BINARY_DIR}/dng.sh"
  @ONLY)

CONFIGURE_FILE(
  "${CMAKE_CURRENT_SOURCE_DIR}/version.h.in"
  "${CMAKE_CURRENT_BINARY_DIR}/version.h"
  @ONLY)

IF(USE_STATIC_LIBS)
  IF(CMAKE_C_COMPILER_ID EQUAL "GNU")
    SET(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "-static-libgcc")
  ENDIF()
  IF(CMAKE_CXX_COMPILER_ID EQUAL "GNU")
    SET(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS "-static-libgcc -static-libstdc++")
  ENDIF()
ENDIF(USE_STATIC_LIBS)
IF(USE_STATIC_FLAG)
  SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -static")
  SET_TARGET_PROPERTIES(dng-dnm    PROPERTIES LINK_SEARCH_START_STATIC On)
  SET_TARGET_PROPERTIES(dng-phaser PROPERTIES LINK_SEARCH_START_STATIC On)
  SET_TARGET_PROPERTIES(dng-call   PROPERTIES LINK_SEARCH_START_STATIC On)

  SET_TARGET_PROPERTIES(dng-dnm    PROPERTIES LINK_SEARCH_END_STATIC On)
  SET_TARGET_PROPERTIES(dng-phaser PROPERTIES LINK_SEARCH_END_STATIC On)
  SET_TARGET_PROPERTIES(dng-call   PROPERTIES LINK_SEARCH_END_STATIC On)
ENDIF(USE_STATIC_FLAG)

#TARGET_LINK_LIBRARIES(dng-dnm newmat)# dngutils)
TARGET_LINK_LIBRARIES(dng-dnm ZLIB::ZLIB)
TARGET_LINK_LIBRARIES(dng-dnm ${Boost_LIBRARIES})
TARGET_LINK_LIBRARIES(dng-dnm ${HTSLIB_LIBRARIES})
TARGET_LINK_LIBRARIES(dng-dnm EIGEN3::EIGEN3)

#TARGET_LINK_LIBRARIES(dng-phaser newmat)# dngutils)
TARGET_LINK_LIBRARIES(dng-phaser ZLIB::ZLIB)
TARGET_LINK_LIBRARIES(dng-phaser ${Boost_LIBRARIES})
TARGET_LINK_LIBRARIES(dng-phaser ${HTSLIB_LIBRARIES})

TARGET_LINK_LIBRARIES(dng-call
  Boost::PROGRAM_OPTIONS Boost::FILESYSTEM Boost::SYSTEM
)
IF(DEVEL_MODE)
  TARGET_LINK_LIBRARIES(dng-call Boost::TIMER)
ENDIF()

TARGET_LINK_LIBRARIES(dng-call HTSLIB::HTSLIB Threads::Threads)

TARGET_LINK_LIBRARIES(dng-call EIGEN3::EIGEN3)
IF(TARGET ext_eigen3)
  ADD_DEPENDENCIES(dng-call ext_eigen3)
ENDIF()

################################################################################
# Install

INSTALL(TARGETS dng-dnm RUNTIME DESTINATION ${CMAKE_INSTALL_LIBEXECDIR} ${PROJ_INSTALL_EXTRA_ARGS})
INSTALL(TARGETS dng-phaser RUNTIME DESTINATION ${CMAKE_INSTALL_LIBEXECDIR} ${PROJ_INSTALL_EXTRA_ARGS})
INSTALL(TARGETS dng-call RUNTIME DESTINATION ${CMAKE_INSTALL_LIBEXECDIR} ${PROJ_INSTALL_EXTRA_ARGS})
INSTALL(PROGRAMS "${CMAKE_CURRENT_BINARY_DIR}/dng.sh"
  DESTINATION ${CMAKE_INSTALL_BINDIR} RENAME dng)
